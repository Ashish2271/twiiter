// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(cuid())
  firstName       String
  lastName        String?
  email           String         @unique
  profileImageURL String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  likedTweet      LikedTweet[]
  commentTweet    CommentTweet[]
  followers       Follows[]      @relation("follower")
  following       Follows[]      @relation("following")
  tweets          Tweet[]
}

model Follows {
  follower    User   @relation("follower", fields: [followerId], references: [id])
  followerId  String
  following   User   @relation("following", fields: [followingId], references: [id])
  followingId String

  @@id([followerId, followingId])
}

model Tweet {
  id        String         @id @default(cuid())
  content   String
  imageURL  String?
  author    User           @relation(fields: [authorId], references: [id])
  authorId  String
  likes     LikedTweet[]
  comments  CommentTweet[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model LikedTweet {
  id      Int      @id @default(autoincrement())
  tweet   Tweet    @relation(fields: [tweetId], references: [id])
  likedAt DateTime @default(now())
  userId  String?
  User    User?    @relation(fields: [userId], references: [id])
  tweetId String
}

model CommentTweet {
  id          Int      @id @default(autoincrement())
  content     String
  imageURL    String?
  tweet       Tweet    @relation(fields: [tweetId], references: [id])
  commentedAt DateTime @default(now())
  userId      String
  User        User     @relation(fields: [userId], references: [id])
  tweetId     String
}
